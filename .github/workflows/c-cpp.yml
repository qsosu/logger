name: macOS (Apple Silicon) build

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-macos-arm64:
    runs-on: macos-14
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Qt 5 (qmake) and tools
        id: qt
        run: |
          brew install qt@5 pkgconf
          QT_PREFIX="$(brew --prefix qt@5)"
          # Сохраняем для следующих шагов
          echo "QT_PREFIX=$QT_PREFIX" >> "$GITHUB_ENV"
          echo "$QT_PREFIX/bin" >> "$GITHUB_PATH"
          echo "PKG_CONFIG_PATH=$QT_PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "LDFLAGS=-L$QT_PREFIX/lib" >> "$GITHUB_ENV"
          echo "CPPFLAGS=-I$QT_PREFIX/include" >> "$GITHUB_ENV"
          # Вызываем qmake прямо по абсолютному пути в этом шаге
          "$QT_PREFIX/bin/qmake" -v

      - name: Configure (qmake, release, arm64)
        run: |
          mkdir -p build
          cd build
          qmake ../QSOSU-desktop-app.pro CONFIG+=release QMAKE_APPLE_DEVICE_ARCHS=arm64

      - name: Build
        run: |
          cd build
          make -j"$(sysctl -n hw.logicalcpu)"

      - name: Deploy Qt frameworks if .app exists
        id: deploy
        run: |
          cd build
          APP_PATH="$(find . -name "*.app" -maxdepth 3 -print -quit || true)"
          if [ -n "$APP_PATH" ]; then
            macdeployqt "$APP_PATH" -always-overwrite
            echo "app_path=$APP_PATH" >> "$GITHUB_OUTPUT"
          fi

      - name: Package artifact
        id: package
        run: |
          cd build
          if [ -n "${{ steps.deploy.outputs.app_path }}" ]; then
            APP="${{ steps.deploy.outputs.app_path }}"
            ditto -c -k --keepParent "$APP" QSOSU-logger-macOS-arm64.zip
            echo "artifact=build/QSOSU-logger-macOS-arm64.zip" >> "$GITHUB_OUTPUT"
          else
            BIN="$(find . -type f -perm -111 -name 'QSOSU-desktop-app' -print -quit || true)"
            if [ -z "$BIN" ]; then
              echo "Could not find .app or QSOSU-desktop-app binary" >&2
              exit 1
            fi
            tar -czf QSOSU-logger-macOS-arm64.tar.gz "$BIN"
            echo "artifact=build/QSOSU-logger-macOS-arm64.tar.gz" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QSOSU-logger-macOS-arm64
          path: ${{ steps.package.outputs.artifact }}
